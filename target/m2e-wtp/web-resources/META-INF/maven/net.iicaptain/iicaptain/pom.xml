<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

	<modelVersion>4.0.0</modelVersion>

	<groupId>net.iicaptain</groupId>
	<artifactId>iicaptain</artifactId>
	<version>0.8.${SVN_REVISION}-SNAPSHOT</version>
	<packaging>war</packaging>
	<!-- -->
	<name>iiCaptain</name>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<org.springframework.version>3.1.0.RELEASE</org.springframework.version>

	</properties>


	<developers>
		<developer>
			<id>digitalemil</id>
			<name>Emil A. Siemes</name>
			<email>digitalemil at googlemail.com </email>
		</developer>
	</developers>

	<pluginRepositories>
		<pluginRepository>
			<id>repository.springframework.maven.milestone</id>
			<name>Spring Framework Maven Milestone Repository</name>
			<url>http://maven.springframework.org/milestone</url>
		</pluginRepository>
	</pluginRepositories>

	<repositories>
		<repository>
			<id>gemfire-repository</id>
			<name>Gemfire Repository</name>
			<url>http://dist.gemstone.com/maven/release</url>
		</repository>
		<repository>
			<id>central</id>
			<name>Maven Repository Switchboard</name>
			<layout>default</layout>
			<url>http://repo1.maven.org/maven2</url>
		</repository>
		<repository>
			<id>springsource-repo</id>
			<name>SpringSource Repository</name>
			<url>http://repo.springsource.org/release</url>
		</repository>
		<repository>
			<id>spring-milestone</id>
			<name>Spring Maven MILESTONE Repository</name>
			<url>http://maven.springframework.org/milestone</url>
		</repository>
		<repository>
			<id>org.springframework.maven.milestone</id>
			<name>Spring Maven Milestone Repository</name>
			<url>http://maven.springframework.org/milestone</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
	</repositories>

	<dependencies>
		<dependency>
			<groupId>org.springframework.data</groupId>
			<artifactId>spring-data-hadoop</artifactId>
			<version>1.0.0.RELEASE</version>
		</dependency>
		<dependency>
			<groupId>org.apache.hadoop</groupId>
			<artifactId>hadoop-core</artifactId>
			<version>1.0.4</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.integration</groupId>
			<artifactId>spring-integration-gemfire</artifactId>
			<version>3.0.0.M1</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.integration</groupId>
			<artifactId>spring-integration-core</artifactId>
			<version>3.0.0.M1</version>
		</dependency>
		<dependency>
			<groupId>org.seleniumhq.selenium</groupId>
			<artifactId>selenium-api</artifactId>
			<version>2.25.0</version>
		</dependency>
		<dependency>
			<groupId>org.seleniumhq.selenium</groupId>
			<artifactId>selenium-java</artifactId>
			<version>2.24.1</version>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>servlet-api</artifactId>
			<version>2.5</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.data</groupId>
			<artifactId>spring-data-gemfire</artifactId>
			<version>1.2.2.RELEASE</version>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>jstl</artifactId>
			<version>1.2</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<version>1.3.167</version>
		</dependency>
		<dependency>
			<groupId>commons-dbcp</groupId>
			<artifactId>commons-dbcp</artifactId>
			<version>1.2.2</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-core</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>

		<!-- Expression Language (depends on spring-core) Define this if you use 
			Spring Expression APIs (org.springframework.expression.*) -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-expression</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>

		<!-- Bean Factory and JavaBeans utilities (depends on spring-core) Define 
			this if you use Spring Bean APIs (org.springframework.beans.*) -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-beans</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>

		<!-- Aspect Oriented Programming (AOP) Framework (depends on spring-core, 
			spring-beans) Define this if you use Spring AOP APIs (org.springframework.aop.*) -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-aop</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>

		<!-- Application Context (depends on spring-core, spring-expression, spring-aop, 
			spring-beans) This is the central artifact for Spring's Dependency Injection 
			Container and is generally always defined -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>

		<!-- Various Application Context utilities, including EhCache, JavaMail, 
			Quartz, and Freemarker integration Define this if you need any of these integrations -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context-support</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>

		<!-- Transaction Management Abstraction (depends on spring-core, spring-beans, 
			spring-aop, spring-context) Define this if you use Spring Transactions or 
			DAO Exception Hierarchy (org.springframework.transaction.*/org.springframework.dao.*) -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-tx</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>

		<!-- JDBC Data Access Library (depends on spring-core, spring-beans, spring-context, 
			spring-tx) Define this if you use Spring's JdbcTemplate API (org.springframework.jdbc.*) -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-jdbc</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>

		<!-- Object-to-Relation-Mapping (ORM) integration with Hibernate, JPA, 
			and iBatis. (depends on spring-core, spring-beans, spring-context, spring-tx) 
			Define this if you need ORM (org.springframework.orm.*) -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-orm</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>

		<!-- Object-to-XML Mapping (OXM) abstraction and integration with JAXB, 
			JiBX, Castor, XStream, and XML Beans. (depends on spring-core, spring-beans, 
			spring-context) Define this if you need OXM (org.springframework.oxm.*) -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-oxm</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>

		<!-- Web application development utilities applicable to both Servlet and 
			Portlet Environments (depends on spring-core, spring-beans, spring-context) 
			Define this if you use Spring MVC, or wish to use Struts, JSF, or another 
			web framework with Spring (org.springframework.web.*) -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-web</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>

		<!-- Spring MVC for Servlet Environments (depends on spring-core, spring-beans, 
			spring-context, spring-web) Define this if you use Spring MVC with a Servlet 
			Container such as Apache Tomcat (org.springframework.web.servlet.*) -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>

		<!-- Support for testing Spring applications with tools such as JUnit and 
			TestNG This artifact is generally always defined with a 'test' scope for 
			the integration testing framework and unit testing stubs -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<version>${org.springframework.version}</version>
			<scope>test</scope>
		</dependency>


		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-core</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-config</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-web</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>

		<dependency>
			<groupId>org.cloudfoundry</groupId>
			<artifactId>cloudfoundry-runtime</artifactId>
			<version>0.6.1</version>
		</dependency>

		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>[4.1.0,)</version>
		</dependency>

	</dependencies>
	<build>
		<plugins>
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>1.6</source>
					<target>1.6</target>
				</configuration>
				<version>2.3.2</version>
			</plugin>

			<plugin>
				<groupId>org.cloudfoundry</groupId>
				<artifactId>cf-maven-plugin</artifactId>
				<version>1.0.0.M4</version>
				<configuration>
					<server>mycloudfoundry-instance</server>
					<target>http://172.16.227.92</target>
					<url>iicaptain-test.vcap.me</url>
					<appname>iicaptain-test</appname>
					<memory>512</memory>
					<services>
						<service>
							<name>iicaptain-test-user-db</name>
							<vendor>postgresql</vendor>
						</service>
					</services>
				</configuration>
				<executions>
					<execution>
						<id>deployToCF</id>
						<phase>package</phase>
						<goals>
							<goal>push</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<!-- <plugin> <groupId>org.apache.maven.plugins</groupId> <artifactId>maven-surefire-plugin</artifactId> 
				<configuration> <excludes> <exclude>**/selenium/*.java</exclude> </excludes> 
				</configuration> <executions> <execution> <id>unit-tests</id> <phase>package</phase> 
				<goals> <goal>test</goal> </goals> <configuration> <skip>false</skip> </configuration> 
				</execution> </executions> </plugin> -->
			<plugin>
				<artifactId>maven-resources-plugin</artifactId>
				<version>2.6</version>
				<executions>
					<execution>
						<id>copy-resources</id>

						<phase>compile</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>target/iicaptain-0.8.${SVN_REVISION}-SNAPSHOT/www</outputDirectory>
							<resources>
								<resource>
									<directory>src/main/www</directory>
									<filtering>true</filtering>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<artifactId>maven-antrun-plugin</artifactId>
				<version>1.7</version>
				<dependencies>
					<dependency>
						<groupId>junit</groupId>
						<artifactId>junit</artifactId>
						<version>[4.1.0,)</version>
					</dependency>
					<dependency>
						<groupId>ant</groupId>
						<artifactId>ant-junit</artifactId>
						<version>1.6.5</version>
					</dependency>
				</dependencies>
				<executions>
					<execution>
						<id>copywar</id>
						<phase>package</phase>
						<configuration>
							<failOnError>false</failOnError>
							<tasks>
								<copy file="target/iicaptain-0.8.${SVN_REVISION}-SNAPSHOT.war"
									todir="/var/www">
								</copy>
							</tasks>
						</configuration>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>
					<!-- <execution> <id>provision</id> <phase>package</phase> <configuration> 
						<tasks> <exec dir="." executable="ant" failonerror="true"> <arg line="vFabricApplicationDirectorDeploy" 
						/> <arg line="-Ddata=${data}" /> <arg line="-Duser=${user}" /> <arg line="-Dpasswd=${passwd}" 
						/> <arg line="-DappdIp=${appdIp}" /> <arg line="-DdeploymentProfileId=${deploymentProfileId}" 
						/> <arg line="-Dnodename=${nodename}" /> <arg line="-Dmycp=target/classes:target/iicaptain-0.8.${SVN_REVISION}-SNAPSHOT/WEB-INF/lib/*" 
						/> </exec> </tasks> </configuration> <goals> <goal>run</goal> </goals> </execution> -->
					<!-- <execution> <id>createAppInAPM</id> <phase>integration-test</phase> 
						<configuration> <tasks> <exec dir="." executable="ant" failonerror="true"> 
						<arg line="vFabricAPMCreateApp" /> <arg line="-Dapmuser=${apmuser}" /> <arg 
						line="-Dapmpasswd=${apmpasswd}" /> <arg line="-DapmIp=${apmIp}" /> <arg line="-Dappname=${project.name}-0.8.${SVN_REVISION}" 
						/> <arg line="-Ddescription=Release:0.8.${SVN_REVISION}-SNAPSHOT" /> <arg 
						line="-Dmycp=target/classes:target/iicaptain-0.8.${SVN_REVISION}-SNAPSHOT/WEB-INF/lib/*" 
						/> </exec> </tasks> </configuration> <goals> <goal>run</goal> </goals> </execution> -->
					<execution>
						<id>JMeterTests</id>
						<phase>integration-test</phase>
						<configuration>
							<tasks>
								<exec dir="." executable="ant" failonerror="true">
									<arg line="JMeter" />
								</exec>
							</tasks>
						</configuration>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>
					<execution>
						<id>package</id>
						<phase>package</phase>
						<configuration>
							<tasks>
								<!-- <exec dir="." executable="ant" failonerror="true"> <arg line="-Ddevtype=bb" 
									/> <arg line="phonegap" /> <arg line="-DSVN_REVISION=${SVN_REVISION}" /> 
									</exec> -->
							</tasks>
						</configuration>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>
					<execution>
						<id>clean</id>
						<phase>clean</phase>
						<configuration>
							<tasks>
								<exec dir="." executable="ant" failonerror="true">
									<arg line="clean" />
								</exec>
							</tasks>
						</configuration>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>
				</executions>

			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
				<version>2.12.3</version>
				<configuration>
					<includes>
						<include>**/selenium/*.java</include>
					</includes>
				</configuration>
				<executions>
					<execution>
						<id>selenium-tests</id>
						<phase>verify</phase>
						<goals>
							<goal>integration-test</goal>
							<goal>verify</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.cloudfoundry</groupId>
				<artifactId>cf-maven-plugin</artifactId>
				<version>1.0.0.M4</version>
				<configuration>
					<server>mycloudfoundry-instance</server>
					<target>http://api.vcap.me</target>
					<url>iicaptain-test.vcap.me</url>
					<appname>iicaptain-test</appname>
				</configuration>
				<executions>
					<execution>
						<id>delete</id>
						<phase>clean</phase>
						<goals>
							<goal>delete</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
</project>
